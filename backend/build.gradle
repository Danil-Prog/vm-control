import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

import java.time.Instant

plugins {
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.22'
	id 'com.google.cloud.tools.jib' version '3.4.0'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
}

group = 'com.control.api'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	/* Security */
	implementation group: 'com.auth0', name: 'java-jwt', version: '4.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'

	/* JPA */
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '17'
	}
}

jib {
	to {
		image = "vm-control/${project.name}"
		tags = HashSet.of("latest")
	}

	container.creationTime = Instant.now().toString()
	version = '0.0.1-developer'
}